remotes::install_github('Zhihao-Huang/scPioneer')
remotes::install_github('Zhihao-Huang/scPioneer')
devtools::document()
devtools::build()
#.libPaths("/usersdata/jasper/database/R_4.0.3")
install.packages("/Users/zhihaohuang/Documents/GitHub/scPioneer_2.0.0.tar.gz",
type = 'source',dependencies=TRUE,repos = NULL)
#.libPaths("/usersdata/jasper/database/R_4.0.3")
install.packages("/Users/zhihaohuang/Documents/GitHub/scPioneer_2.0.0.tar.gz",
type = 'source',dependencies=TRUE,repos = NULL)
getwd()
list.files('/Users/zhihaohuang/Documents/GitHub/scPioneer/data-raw/10X_v3.1_exampleData_mouse/5k_Mouse_PBMCs/filtered_feature_bc_matrix/')
# test multi samples from samplelist
param <- PHASE1_run_Seurat_v5_QC_clustering_param_template()
param$is_multidata <- 'TRUE'
param$species <- 'Mouse'
param$samplelist <- '/Users/zhihaohuang/Documents/GitHub/scPioneer/data-raw/10X_v3.1_exampleData_mouse/samplelist'
param$outdir <- '/Users/zhihaohuang/Documents/GitHub/scPioneer/scPioneer/test/multi_mouse/'
obj <- PHASE1_run_Seurat_v5_QC_clustering(param)
param$outdir <- '/Users/zhihaohuang/Documents/GitHub/scPioneer/test/multi_mouse/'
obj <- PHASE1_run_Seurat_v5_QC_clustering(param)
DimPlot(obj)
load('./R/sysdata.rda')
library(ellmer)
install.packages("ellmer")
vignette("ellmer")
chat <- chat_ollama(model = "llama3.2")
library(ellmer)
chat <- chat_ollama(model = "llama3.2")
chat$chat()
chat$chat('who are you')
Sys.setenv(OPENAI_API_KEY = '')
# Load packages
library(GPTCelltype)
BiocManager::install('GPTCelltype')
library(openai)
library(scPioneer)
pbmc <- FindClusters(pbmc, resolution = 2)
Idents(pbmc) <- pbmc$seurat_clusters
markers <- FindAllMarkers(pbmc, logfc.threshold = 0.5, test.use = 'MAST', only.pos = T)
BiocManager::install("MAST")
markers <- FindAllMarkers(pbmc, logfc.threshold = 0.5, test.use = 'MAST', only.pos = T)
top10 <- markers %>% group_by(cluster) %>% top_n(10, avg_log2FC)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
annodf <- anno_ellmer(top10)
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama')
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = seed,
api_args = list(),
echo = NULL
)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 123,
api_args = list(),
echo = NULL
)
chat$chat('hi')
source('~/Documents/GitHub/scPioneer/R/annotation.R')
content <- anno_ellmer(top10,return.content = T)
chat$chat(content)
content
cat(content)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
content <- anno_ellmer(top10,return.content = T)
cat(content)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama')
annodf2
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
chat$chat(content)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 123,
api_args = list(),
echo = NULL
)
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama')
annodf2
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama',  return.content = F)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 123,
api_args = list(),
echo = NULL
)
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 12345,
api_args = list(),
echo = NULL
)
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama',  return.content = F)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 12345,
api_args = list(),
echo = NULL
)
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
source('~/Documents/GitHub/scPioneer/R/annotation.R')
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 12345,
api_args = list(),
echo = NULL
)
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
annodf <- anno_ellmer(top10)
annodf
source('~/Documents/GitHub/scPioneer/R/annotation.R')
annodf <- anno_ellmer(top10)
#' # depends on local model ollama. First download and install Ollama, then install model with ollama pull llama3.2. Test on Mac.
annodf2 <- anno_ellmer(top10, llm_function = 'ollama',  return.content = F)
chat <- chat_ollama(
system_prompt = NULL,
turns = NULL,
base_url = "http://localhost:11434",
model = 'llama3.2',
seed = 12345,
api_args = list(),
echo = NULL
)
content <- anno_ellmer(top10,return.content = T)
cat(content)
chat$chat(content)
#### panglaodb
library(dplyr)
angrycelldata <- readRDS('./data-raw/angrycelldb.rds')
db_self <- angrycelldata$db_self
panglaodb_hs <- angrycelldata$panglaodb_hs
panglaodb_mm <- angrycelldata$panglaodb_mm
# orthologs genesets
files <- list.files('./data-raw/')
txtfiles <- files[grepl('txt$',files)]
