% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_heatmap.R
\name{multiheatmap}
\alias{multiheatmap}
\title{multiheatmap function for showing heatmap of DEG}
\usage{
multiheatmap(
  object = NULL,
  assay = "RNA",
  DEGlist = NULL,
  annotation = NULL,
  group = NULL,
  average.df = NULL,
  cell_order = NULL,
  group_order = NULL,
  gene.order = NULL,
  slot = "scale.data",
  labelgene = NULL,
  labelgene_length = 2,
  block_text_size = 10,
  mark_gene = F,
  mark_gene.fontsize = 10,
  mark_genelist = NULL,
  cut.off = NULL,
  block_gene = T,
  block_alpha = 1,
  annotation_legend_name = "Maintypes",
  show_annotation_name = T,
  annocolor = NULL,
  blockcolor = NULL,
  barcolor = NULL,
  legend.break = NULL,
  column_names_rot = 90,
  simple_anno_size = unit(0.5, "cm"),
  ...
)
}
\description{
multiheatmap function for showing heatmap of DEG
}
\examples{
diffg <- FindAllMarkers(pbmc, only.pos = T)
top20 <- diffg \%>\% group_by(cluster) \%>\% top_n(20, avg_logFC)
cell_order = unique(as.vector(top20$cluster))
pbmc <- ScaleData(pbmc, features = rownames(pbmc))
multiheatmap(object = pbmc, assay = 'RNA', DEGlist = top20, annotation = 'Annotation',
             group = 'Annotation', labelgene = NULL, labelgene_length = 2, slot = 'scale.data',
             mark_gene = F, block_gene = T, cell_order = unique(as.vector(top20$cluster)))
labelgene <- data.frame(gene = top20$gene, Group = top20$cluster, stringsAsFactors = F)
multiheatmap(object = pbmc, assay = 'RNA', DEGlist = top20, annotation = 'Annotation',
             group = 'Annotation', labelgene = labelgene, labelgene_length = 2, slot = 'scale.data',
             mark_gene = F, block_gene = T, cell_order = unique(as.vector(top20$cluster)))
multiheatmap(object = pbmc, assay = 'RNA', DEGlist = top20, annotation = 'Annotation',
             group = 'Annotation', labelgene = NULL, labelgene_length = 2, slot = 'scale.data',
             mark_gene = T, mark_genelist = c('CD4','CD8A','PPBP','CCR7','CD14','CD79A','NKG7'),
             cell_order = unique(as.vector(top20$cluster)))

}
