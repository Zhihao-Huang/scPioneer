% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathway_enrichment.R
\name{GSEA_all}
\alias{GSEA_all}
\title{Pathway analysis of DEGlist from FindMarkers using fGSEA.}
\usage{
GSEA_all(
  DEGdflist,
  species = "Homo sapiens",
  category = NULL,
  subcategory = NULL,
  simplify_pathways = T,
  return.enrichment.plot = F,
  enrichment.plot.pathways = NULL,
  eps = 0,
  nPermSimple = 1000,
  n.cores = 4
)
}
\arguments{
\item{species}{Species of input data.}

\item{category}{Category of MsigDB, such as C2. Use list_all_GSEA_categories() to see all category. See https://www.gsea-msigdb.org/gsea/msigdb/ for details.}

\item{subcategory}{Sub-class of the category, such as KEGG.}

\item{simplify_pathways}{Simplify the pathways names. Lower the alphabets and remove '_'.}

\item{eps}{Minimum of P-value. See ?fgseaMultilevel.}

\item{nPermSimple}{Number of permutations for estimation of P-values. See ?fgseaMultilevel.}

\item{DEGdf}{list of data frames from FindMarkers. DEGdf should include 3 columns: avg_logFC(the second celltype is negative), cluster(2 celltypes) and gene. Recommend logfc.threshold = 0.}
}
\description{
pathway – name of the pathway;
pval – an enrichment p-value; 
padj – a BH-adjusted p-value;
log2err – the expected error for the standard deviation of the P-value logarithm.
ES – enrichment score, same as in Broad GSEA implementation; 
NES – enrichment score normalized to mean enrichment of random samples of the same size; 
size – size of the pathway after removing genes not present in 'names(stats)'. 
leadingEdge – vector with indexes of leading edge genes that drive the enrichment.
}
\examples{
DEG_GSEA <- parallel::mclapply(levels(Idents(pbmc)), function(x) {
mmk <- FindMarkers(pbmc, ident.1 = x, test.use = 'wilcox',
min.pct = 0.25,logfc.threshold = 0)
mmk$gene <- rownames(mmk)
mmk$cluster <- x
mmk$cluster[mmk$avg_logFC < 0] <- paste0(x,'_Others')
mmk
}, mc.cores = 10)
names(DEG_GSEA) <- levels(Idents(pbmc))
gsealist <- GSEA_all(DEG_GSEA, category = 'C2',subcategory = NULL, n.cores = 10)
fgsea_df <- do.call(rbind, gsealist)

}
